#!/usr/local/bin/perl#!/usr/local/bin/perl

package cmpl_deployer;
use Exporter;
use FindBin;
use cmpl_utils;
use cmpl_help;
use Env;

# //////////////////////////////////////////////////////////////////////////////
# @brief export modules
# //////////////////////////////////////////////////////////////////////////////
our @ISA= qw( Exporter );

# these CAN be exported.
our @EXPORT_OK = qw(
  @_deployer
  @_deployer_help
);

# these are exported by default.
our @EXPORT = qw(
  @_deployer
  @_deployer_help
);

our (
  @_deployer,
  @_deployer_help,
);

# read the deployer's cli matches (autogenerated by install-javis.bash)
@_deployer = openfile("deployer.cmpl");

# //////////////////////////////////////////////////////////////////////////////
# @brief setup tab-completion, for general deployer sections
# //////////////////////////////////////////////////////////////////////////////

# @brief assign help keys to usage messages as hashmap -- hack: convert array to hashmap
# - TODO: update this matcher, to use better regex patterns...
@_deployer_help = ({
# -- main --
  id      => "deployer",
  help    => create_help(get_main_help()),

# -- robots --
},{
  id      => "local",
  help    => create_help(get_repository_help()),
},{
  id      => "pt001",
  help    => create_help(get_repository_help()),
},{
  id      => "pt002",
  help    => create_help(get_repository_help()),
},{
  id      => "pt003",
  help    => create_help(get_repository_help()),
},{
  id      => "spot001",
  help    => create_help(get_repository_help()),

# -- workspace --
},{
  id      => "common",
  help    => create_help(get_workspace_help()),
},{
  id      => "autonomy",
  help    => create_help(get_workspace_help()),
},{
  id      => "estimation",
  help    => create_help(get_workspace_help()),
},{
  id      => "drivers",
  help    => create_help(get_workspace_help()),
},{
  id      => "cameras",
  help    => create_help(get_workspace_help()),
},{
  id      => "sim",
  help    => create_help(get_workspace_help()),

# -- catkin --
},{
  id      => "catkin",
  help    => create_help(get_catkin_help()),
},{
  id      => "core",
  help    => create_help(get_catkin_core_help()),
},{
  id      => "deps",
  help    => create_help(get_catkin_deps_help()),

# -- docker --
},{
  id      => "docker",
  help    => create_help(get_docker_help()),
},{
  id      => "make",
  help    => create_help(get_docker_help()),
},{
  id      => "shell",
  help    => create_help(get_docker_shell_help()),
},{
  id      => "start",
  help    => create_help(get_docker_shell_help()),
},{
  id      => "stop",
  help    => create_help(get_docker_shell_help()),
},{
  id      => "rm",
  help    => create_help(get_docker_shell_help()),
},{
  id      => "registry",
  help    => create_help(get_docker_registry_help()),
},{
  id      => "push",
  help    => create_help(get_docker_registry_help()),
},{
  id      => "pull",
  help    => create_help(get_docker_registry_help()),

# -- mon --
},{
  id      => "common.mon",
  help    => create_help(get_mon_common_help()),
},{
  id      => "drivers.mon",
  help    => create_help(get_mon_drivers_help()),
},{
  id      => "estimation.mon",
  help    => create_help(get_mon_estimation_help()),
},{
  id      => "autonomy.mon",
  help    => create_help(get_mon_autonomy_help()),
},{
  id      => "sim.mon",
  help    => create_help(get_mon_simulation_help()),

});
