---
# ////////////////////////////////////////////////////////////////////////
# setup & install azure cli & terraform tools
# ////////////////////////////////////////////////////////////////////////
- name: Localhost Setup
  hosts: all
  gather_facts: False
  vars_files:
  - ../../config/install_options.yaml

    # az cli does not work on arm yet: https://github.com/MicrosoftDocs/azure-docs-cli/issues/1326
    # TODO: arm run this: curl -L https://aka.ms/InstallAzureCli | bash
    # right now, use az, not docker context: read -sp "Azure password: " AZ_PASS && echo && az login -u kat@smash0190hotmail.onmicrosoft.com -p $AZ_PASS

  # ////////////////////////////////////////////////////////////////////////
  # Tasks to execute
  # ////////////////////////////////////////////////////////////////////////
  tasks:
    # ////////////////////////////////////////////////////////////////////////
    # Azure CLI Tool
    # ////////////////////////////////////////////////////////////////////////
    - name: update apt packages
      become: true
      apt:
        update_cache: yes

    - name: Warn ARM
      fail:
        msg: "Cannot install azure on ARM currently :("
      ignore_errors: true
      when: install_azure and "x86" not in arch_type

    - name: Install Ubuntu Prerequisite Packages
      become: true
      apt:
        name: [ca-certificates, curl, lsb-release, gnupg, unzip, wget]
        state: present
        force_apt_get: yes
      when: install_azure and "x86" in arch_type

    - name: Add official GPG key of Azure CLI
      become: true
      shell: curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null
      when: install_azure and "x86" in arch_type

    - name: Save the current Ubuntu release version
      shell: lsb_release -cs
      register: ubuntu_version
      when: install_azure and "x86" in arch_type

    - name: Set right Azure CLI directory
      become: true
      shell: add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ {{ ubuntu_version.stdout }} main"
      when: install_azure and "x86" in arch_type

    - name: Update apt packages
      become: true
      apt:
        update_cache: yes
      when: install_azure and "x86" in arch_type

    - name: Install Azure CLI
      become: true
      apt:
        name: azure-cli
        state: present
        force_apt_get: yes
      when: install_azure and "x86" in arch_type

    - name: Validate Azure CLI Version
      become: true
      shell: az --version
      register: az_version_out
      when: install_azure and "x86" in arch_type

    - name: Output Validate Azure CLI Version
      debug:
        msg: "Azure CLI Version: {{az_version_out.stdout}}"
      when: install_azure and "x86" in arch_type

    # ////////////////////////////////////////////////////////////////////////
    # Azcopy
    # ////////////////////////////////////////////////////////////////////////
    - name: Warn ARM AZCopoy
      fail:
        msg: "Cannot install azcopy on ARM currently :("
      ignore_errors: true
      when: install_azure and "x86" not in arch_type

    - name: Download AzCopy
      shell:
        cmd: wget -O azcopy_v10.tar.gz https://aka.ms/downloadazcopy-v10-linux && tar -xf azcopy_v10.tar.gz --strip-components=1
        chdir: /tmp/
      when: install_azure and "x86" in arch_type

    - name: Remove any previous azcopy versions
      become: true
      file:
        path: /usr/bin/azcopy
        state: absent
      when: install_azure and "x86" in arch_type

    - name: Move azcopy to bin path
      become: true
      shell: cp /tmp/azcopy /usr/bin/
      when: install_azure and "x86" in arch_type

    - name: Add execution permissions
      become: true
      shell: chmod +x /usr/bin/azcopy
      when: install_azure and "x86" in arch_type

    - name: Remove downloaded azcopy.gz
      become: true
      file:
        path: /tmp/azcopy_v10.tar.gz
        state: absent
      when: install_azure and "x86" in arch_type

    - name: Remove downloaded azcopy
      become: true
      file:
        path: /tmp/azcopy
        state: absent
      when: install_azure and "x86" in arch_type

    # ////////////////////////////////////////////////////////////////////////
    # Terraform Tool
    # ////////////////////////////////////////////////////////////////////////
    - name: Warn ARM Terraform
      fail:
        msg: "Cannot install terraform on ARM currently :( (nor should you need it...)"
      ignore_errors: true
      when: install_terraform and "x86" not in arch_type

    - name: Update apt packages
      become: true
      apt:
        update_cache: yes
      when: install_terraform and "x86" in arch_type

    - name: Download Terraform Package File To Tmp
      get_url:
        url: https://releases.hashicorp.com/terraform/{{ item.version }}/terraform_{{ item.version }}_linux_amd64.zip
        dest: /tmp/
        mode: 0755
      with_items: " {{ terraform }} "
      when: install_terraform and "x86" in arch_type

    - name: Extract Terraform Package
      unarchive:
        src: /tmp/terraform_{{ item.version }}_linux_amd64.zip
        dest: /tmp/
      with_items: " {{ terraform }} "
      when: install_terraform and "x86" in arch_type

    - name: stat terraform
      stat: path=/tmp/terraform
      register: terraform_stat
      when: install_terraform and "x86" in arch_type

    - name: Move Terraform To Bin
      command: mv /tmp/terraform /usr/local/bin/
      become: true
      when: install_terraform and terraform_stat.stat.exists and "x86" in arch_type
  
    - name: Remove file (delete file)
      file:
        path: /tmp/terraform_{{ item.version }}_linux_amd64.zip
        state: absent
      with_items: " {{ terraform }} "
      when: install_terraform and "x86" in arch_type
