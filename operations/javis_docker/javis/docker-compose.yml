version: '2.3'
services:
  # ////////////////////////////////////////////////////////////////////////////
  # base image service, that extends any one of the system group services
  # ////////////////////////////////////////////////////////////////////////////


  # ////////////////////////////////////////////////////////////////////////////
  # Basic JAVIS Service (Rviz, generally shared code, a little sim code for viz)
  # ////////////////////////////////////////////////////////////////////////////
  javis_common:
    image: javis/${JAVIS_ARCH_T}.ros.${JAVIS_ROS_DISTRO}:${DOCKER_IMAGE_VERSION}
    build:
      # docker build context
      context: ${JAVIS_DOCKER_PATH}/javis/
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/${JAVIS_ROS_DISTRO}.dockerfile
    extends:
      service: base
    container_name: javis_common
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_common/setup.bash
      - COLCON_LOG_PATH=/home/developer/javis_ws/log/javis_common
      - COLCON_HOME=/home/developer/javis_ws/src/javis_common
    volumes:
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"


  # ////////////////////////////////////////////////////////////////////////////
  # JAVIS Autonomy Service (exploration, planner, etc...)
  # ////////////////////////////////////////////////////////////////////////////
  javis_autonomy:
    image: javis/${JAVIS_ARCH_T}.autonomy:${DOCKER_IMAGE_VERSION}
    build:
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/autonomy.dockerfile
      context: ${JAVIS_DOCKER_PATH}/javis/
    extends:
      service: base
    container_name: javis_autonomy
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_autonomy/setup.bash
      - COLCON_LOG_PATH=/home/developer/javis_ws/log/javis_autonomy
      - COLCON_HOME=/home/developer/javis_ws/src/javis_autonomy

  # ////////////////////////////////////////////////////////////////////////////
  # drivers service (motor drivers / imu / velodyne / etc...)
  # ////////////////////////////////////////////////////////////////////////////
  javis_drivers:
    image: javis/${JAVIS_ARCH_T}.drivers:${DOCKER_IMAGE_VERSION}
    build:
      context: ${JAVIS_DOCKER_PATH}/javis/
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/drivers.dockerfile
    extends:
      service: base
    container_name: javis_drivers
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_drivers/setup.bash
      - COLCON_LOG_PATH=/home/developer/javis_ws/log/javis_drivers
      - COLCON_HOME=/home/developer/javis_ws/src/javis_drivers

    volumes:
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"

  # ////////////////////////////////////////////////////////////////////////////
  # drivers service (motor drivers / imu / velodyne / etc...)
  # ////////////////////////////////////////////////////////////////////////////
  javis_spot:
    image: javis/${JAVIS_ARCH_T}.spot:${DOCKER_IMAGE_VERSION}
    build:
      context: ${JAVIS_DOCKER_PATH}/javis/
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/spot.dockerfile
    extends:
      service: base
    container_name: javis_spot
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_spot/setup.bash
      - COLCON_LOG_PATH=/home/developer/javis_ws/log/javis_spot
      - COLCON_HOME=/home/developer/javis_ws/src/javis_spot
    volumes:
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"

  # ////////////////////////////////////////////////////////////////////////////
  # triage
  # ////////////////////////////////////////////////////////////////////////////
  javis_triage:
    image: javis/${JAVIS_ARCH_T}.triage:${DOCKER_IMAGE_VERSION}
    build:
      context: ${JAVIS_DOCKER_PATH}/javis/
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/triage.dockerfile
    extends:
      service: base
    container_name: javis_triage
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_triage/setup.bash
      - COLCON_LOG_PATH=/home/developer/javis_ws/log/javis_triage
      - COLCON_HOME=/home/developer/javis_ws/src/javis_triage
    volumes:
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"

  # ////////////////////////////////////////////////////////////////////////////
  # state estimation service (SLAM etc
  # ////////////////////////////////////////////////////////////////////////////
  javis_perception:
    image: javis/${JAVIS_ARCH_T}.perception:${DOCKER_IMAGE_VERSION}
    build:
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/perception.dockerfile
      context: ${JAVIS_DOCKER_PATH}/javis/
    extends:
      service: base
    container_name: javis_perception
    #privileged: true
    #ulimits:
    #  nice: 40
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_perception/setup.bash
      - COLCON_LOG_PATH=/home/developer/javis_ws/log/javis_perception
      - COLCON_HOME=/home/developer/javis_ws/src/javis_perception
    volumes:
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"


  # ////////////////////////////////////////////////////////////////////////////
  # llava
  # ////////////////////////////////////////////////////////////////////////////
  javis_llava:
    image: javis/${JAVIS_ARCH_T}.llava:${DOCKER_IMAGE_VERSION}
    build:
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/llava.dockerfile
      context: ${JAVIS_DOCKER_PATH}/javis/
    extends:
      service: base
    container_name: javis_llava
    #privileged: true
    #ulimits:
    #  nice: 40
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_llava/setup.bash
      - COLCON_LOG_PATH=/home/developer/javis_ws/log/javis_llava
      - COLCON_HOME=/home/developer/javis_ws/src/javis_llava
    volumes:
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"

  # ////////////////////////////////////////////////////////////////////////////
  # nanosam
  # ////////////////////////////////////////////////////////////////////////////
  javis_nanosam:
    image: javis/${JAVIS_ARCH_T}.nanosam:${DOCKER_IMAGE_VERSION}
    build:
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/nanosam.dockerfile
      context: ${JAVIS_DOCKER_PATH}/javis/
    extends:
      service: base
    container_name: javis_nanosam
    #privileged: true
    #ulimits:
    #  nice: 40
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_nanosam/setup.bash
      - COLCON_LOG_PATH=/home/developer/javis_ws/log/javis_nanosam
      - COLCON_HOME=/home/developer/javis_ws/src/javis_nanosam
    volumes:
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"

  # ////////////////////////////////////////////////////////////////////////////
  # test
  # ////////////////////////////////////////////////////////////////////////////
  javis_test:
    image: javis/${JAVIS_ARCH_T}.test:${DOCKER_IMAGE_VERSION}
    build:
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/test.dockerfile
      context: ${JAVIS_DOCKER_PATH}/javis/
    extends:
      service: base
    container_name: javis_test
    privileged: true
    #ulimits:
    #  nice: 40
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_test/setup.bash
      - COLCON_LOG_PATH=/home/developer/javis_ws/log/javis_test
    volumes:
      - /usr/lib/aarch64-linux-gnu/tegra:/usr/lib/aarch64-linux-gnu/tegra
      - /usr/src/jetson_multimedia_api:/usr/src/jetson_multimedia_api
      - /usr/src/jetson_multimedia_api/argus:/usr/src/jetson_multimedia_api/argus
      - /etc/nv_tegra_release:/etc/nv_tegra_release
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
      - /var/nvidia/nvcam/settings/:/var/nvidia/nvcam/settings/
      - /etc/systemd/system:/etc/systemd/system
      - /etc/udev/rules.d/:/etc/udev/rules.d/
    runtime: nvidia
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"





  # ////////////////////////////////////////////////////////////////////////////
  # Simulation stuff!! (should be a stand in replacement for drivers / state estimation)
  # ////////////////////////////////////////////////////////////////////////////
  javis_sim:
    image: javis/${JAVIS_ARCH_T}.sim:${DOCKER_IMAGE_VERSION}
    build:
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/sim.dockerfile
      context: ${JAVIS_DOCKER_PATH}/javis/
    extends:
      service: base
    container_name: javis_sim
    privileged: true
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_sim/setup.bash


