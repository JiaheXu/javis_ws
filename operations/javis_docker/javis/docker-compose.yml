version: '2.3'
services:
  # ////////////////////////////////////////////////////////////////////////////
  # base image service, that extends any one of the system group services
  # ////////////////////////////////////////////////////////////////////////////


  # ////////////////////////////////////////////////////////////////////////////
  # Basic JAVIS Service (Rviz, generally shared code, a little sim code for viz)
  # ////////////////////////////////////////////////////////////////////////////
  javis_common:
    image: javis/${JAVIS_ARCH_T}.ros.${JAVIS_ROS_DISTRO}:${DOCKER_IMAGE_VERSION}
    build:
      # docker build context
      context: ${JAVIS_DOCKER_PATH}/javis/
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/${JAVIS_ROS_DISTRO}.dockerfile
    extends:
      service: base
    container_name: javis_common
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_common/setup.bash
    volumes:
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"


  # ////////////////////////////////////////////////////////////////////////////
  # JAVIS Autonomy Service (exploration, planner, etc...)
  # ////////////////////////////////////////////////////////////////////////////
  javis_autonomy:
    image: javis/${JAVIS_ARCH_T}.autonomy:${DOCKER_IMAGE_VERSION}
    build:
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/autonomy.dockerfile
      context: ${JAVIS_DOCKER_PATH}/javis/
    extends:
      service: base
    container_name: javis_autonomy
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_autonomy/setup.bash

  # ////////////////////////////////////////////////////////////////////////////
  # drivers service (motor drivers / imu / velodyne / etc...)
  # ////////////////////////////////////////////////////////////////////////////
  javis_drivers:
    image: javis/${JAVIS_ARCH_T}.drivers:${DOCKER_IMAGE_VERSION}
    build:
      context: ${JAVIS_DOCKER_PATH}/javis/
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/drivers.dockerfile
    extends:
      service: base
    container_name: javis_drivers
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_drivers/setup.bash
    volumes:
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"

  # ////////////////////////////////////////////////////////////////////////////
  # drivers service (motor drivers / imu / velodyne / etc...)
  # ////////////////////////////////////////////////////////////////////////////
  javis_spot:
    image: javis/${JAVIS_ARCH_T}.spot:${DOCKER_IMAGE_VERSION}
    build:
      context: ${JAVIS_DOCKER_PATH}/javis/
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/spot.dockerfile
    extends:
      service: base
    container_name: javis_spot
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_spot/setup.bash
    volumes:
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"

  # ////////////////////////////////////////////////////////////////////////////
  # drivers service (motor drivers / imu / velodyne / etc...)
  # ////////////////////////////////////////////////////////////////////////////
  javis_medical:
    image: javis/${JAVIS_ARCH_T}.medical:${DOCKER_IMAGE_VERSION}
    build:
      context: ${JAVIS_DOCKER_PATH}/javis/
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/medical.dockerfile
    extends:
      service: base
    container_name: javis_medical
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_medical/setup.bash
    volumes:
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"

  # ////////////////////////////////////////////////////////////////////////////
  # state estimation service (loam / super odometry / etc...)
  # ////////////////////////////////////////////////////////////////////////////
  javis_estimation:
    image: javis/${JAVIS_ARCH_T}.state_estimation:${DOCKER_IMAGE_VERSION}
    build:
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/estimation.dockerfile
      context: ${JAVIS_DOCKER_PATH}/javis/
    extends:
      service: base
    container_name: javis_estimation
    #privileged: true
    #ulimits:
    #  nice: 40
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_estimation/setup.bash

    volumes:
      - /usr/sbin/nvargus-daemon:/usr/sbin/nvargus-daemon
      - /tmp/argus_socket:/tmp/argus_socket
      - /tmp:/tmp
    devices:
      - /dev/i2c-8:/dev/i2c-8
      - /dev/video0:/dev/video0
      - /dev/video1:/dev/video1
      - /dev/video2:/dev/video2
      - /dev/video3:/dev/video3
      - /dev/video4:/dev/video4
      - /dev/video5:/dev/video5
      - /dev/video6:/dev/video6
    ipc: "host"
  # ////////////////////////////////////////////////////////////////////////////
  # Simulation stuff!! (should be a stand in replacement for drivers / state estimation)
  # ////////////////////////////////////////////////////////////////////////////
  javis_sim:
    image: javis/${JAVIS_ARCH_T}.sim:${DOCKER_IMAGE_VERSION}
    build:
      dockerfile: ${JAVIS_DOCKER_PATH}/javis/services/sim.dockerfile
      context: ${JAVIS_DOCKER_PATH}/javis/
    extends:
      service: base
    container_name: javis_sim
    privileged: true
    environment:
      - ROS_SOURCED_WORKSPACE=/home/developer/javis_ws/install/javis_sim/setup.bash


