version: '2.3'
services:
  arm-tegra-gpu:
    build:
      context: ${JAVIS_DOCKER_PATH}/
      args:
        #- BASE_DOCKER_IMAGE=nvcr.io/nvidia/l4t-base:r35.1.0
        - BASE_DOCKER_IMAGE=nvcr.io/nvidia/l4t-ml:r35.1.0-py3
        # - BASE_DOCKER_IMAGE=nvcr.io/nvidia/l4t-ml:r35.2.1-py3
    volumes:
      ## Misc software mount-in
      - /opt/nvidia:/opt/nvidia
      - :/usr/lib/aarch64-linux-gnu/tegra
      - /usr/src/jetson_multimedia_api:/usr/src/jetson_multimedia_api
      - /usr/src/jetson_multimedia_api/argus:/usr/src/jetson_multimedia_api/argus
      - /etc/nv_tegra_release:/etc/nv_tegra_release
      
    devices:
      - /dev/nvhost-ctrl
      - /dev/nvhost-ctrl-gpu
      - /dev/nvhost-prof-gpu
      - /dev/nvmap
      - /dev/nvhost-gpu
      - /dev/nvhost-as-gpu
    runtime: nvidia

  # ////////////////////////////////////////////////////////////////////////////
  # base non-gpu build
  # ////////////////////////////////////////////////////////////////////////////
  x86-non-gpu:
    build:
      context: ${JAVIS_DOCKER_PATH}/
      args:
        - BASE_DOCKER_IMAGE=nvidia/opengl:1.2-glvnd-devel-ubuntu22.04

  # ////////////////////////////////////////////////////////////////////////////
  # base ros, x86, gpu workspace setup
  # ////////////////////////////////////////////////////////////////////////////
  x86-nvidia-gpu:
    build:
      context: ${JAVIS_DOCKER_PATH}/
      args:
        - BASE_DOCKER_IMAGE=nvidia/opengl:1.2-glvnd-devel-ubuntu22.04
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    # volumes:
      # mount the opencv4 headers from host
      # - ~/dds_install/:/home/developer/dds_install/
    runtime: nvidia

  # ////////////////////////////////////////////////////////////////////////////
  # base image service, that extends any one of the system group services
  # ////////////////////////////////////////////////////////////////////////////
  base:
    # extend gpu or non-gpu
    build:
      args:
        - ARCH_T=$JAVIS_ARCH_T
        - JAVIS_ROS_DISTRO=$JAVIS_ROS_DISTRO
        - DOCKER_IMAGE_VERSION=$DOCKER_IMAGE_VERSION
        - user_id=$JAVIS_USERID
        - group_id=$JAVIS_GROUPID
    extends:
      service: ${JAVIS_HOST_TYPE}
    privileged: true
    security_opt:
      - seccomp:unconfined
    ipc: host
    volumes:
      # javis workspace
      - ${JAVIS_PATH}:/home/developer/javis_ws/
      # gui configurations
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /etc/localtime:/etc/localtime:ro
      - /dev/input:/dev/input
      - /dev/:/dev/
      - /etc/hosts:/etc/hosts
      - ~/.javis/auto/deploy.conf:/home/developer/.javis/auto/deploy.conf
      - ${JAVIS_LOGGING_DIR}:/logging
      - /var/log/syslog:/syslog
      #- $XAUTHORITY:/home/developer/.Xauthority:rw
    environment:
      # Set environment params for GUI container passthrough
      - DISPLAY
      - QT_X11_NO_MITSHM=1
      # - XAUTHORITY=/tmp/.docker.xauth
      # - QT_QPA_PLATFORM='offscreen'
      - JAVIS_ROS_DISTRO=${JAVIS_ROS_DISTRO}
      # deployer export for exec call
      - DEPLOYER_TOP_PATH=/home/developer/javis_ws/operations//javis_deploy/deployer/
      - DEPLOYER_BIN=/home/developer/javis_ws/operations//javis_deploy/deployer/bin/
      - DEPLOYER_BOOKS_PATH=/home/developer/javis_ws/operations//javis_deploy/books/
      - JAVIS_PATH=/home/developer/javis_ws/
      - JAVIS_SRC_PATH=/home/developer/javis_ws/src/
      # Set the hostnames of different systems
      - ROS_MASTER_IP=$JAVIS_HOSTNAME
      - ROS_HOSTNAME=$JAVIS_HOSTNAME
      - JAVIS_USERID=$JAVIS_USERID
      - JAVIS_GROUPID=$JAVIS_GROUPID
      - JAVIS_SYSTEM_ID=$JAVIS_SYSTEM_ID
      - JAVIS_SYSTEM_TYPE=$JAVIS_SYSTEM_TYPE
      - JAVIS_SYSTEM_COMPONENT=$JAVIS_SYSTEM_COMPONENT
      - JAVIS_SETUP_SUPPRESS_CHECKS=true
    # entrypoint:
    #   - /docker-entrypoint/ws-shell.bash
    tty: true
    # use host network
    network_mode: "host"


  # ros2_base:
    # # extend gpu or non-gpu
    # build:
    #   args:
    #     - ARCH_T=$JAVIS_ARCH_T
    #     - JAVIS_ROS_DISTRO=$JAVIS_ROS_DISTRO
    #     - DOCKER_IMAGE_VERSION=$DOCKER_IMAGE_VERSION
    #     - user_id=$JAVIS_USERID
    #     - group_id=$JAVIS_GROUPID
    # extends:
    #   service: ${JAVIS_HOST_TYPE}
    # privileged: true
    # security_opt:
    #   - seccomp:unconfined
    # ipc: host
    # volumes:

    #   # javis workspace
    #   - ${JAVIS_PATH}:/home/developer/javis_ws/
    #   # gui configurations
    #   - /tmp/.X11-unix:/tmp/.X11-unix
    #   - /etc/localtime:/etc/localtime:ro
    #   - /dev/input:/dev/input
    #   - /dev/:/dev/
    #   - /etc/hosts:/etc/hosts
    #   - ~/.javis/auto/deploy.conf:/home/developer/.javis/auto/deploy.conf
    #   - ${JAVIS_LOGGING_DIR}:/logging
    #   - /var/log/syslog:/syslog
    #   - /usr/lib/aarch64-linux-gnu/tegra:/usr/lib/aarch64-linux-gnu/tegra
    #   #- $XAUTHORITY:/home/developer/.Xauthority:rw

    # environment:
    #   # Set environment params for GUI container passthrough
    #   - DISPLAY
    #   - QT_X11_NO_MITSHM=1
    #   # - XAUTHORITY=/tmp/.docker.xauth
    #   # - QT_QPA_PLATFORM='offscreen'
    #   # - JAVIS_ROS_DISTRO=${JAVIS_ROS_DISTRO}
    #   # deployer export for exec call
    #   - DEPLOYER_TOP_PATH=/home/developer/javis_ws/operations//javis_deploy/deployer/
    #   - DEPLOYER_BIN=/home/developer/javis_ws/operations//javis_deploy/deployer/bin/
    #   - DEPLOYER_BOOKS_PATH=/home/developer/javis_ws/operations//javis_deploy/books/
    #   - JAVIS_PATH=/home/developer/javis_ws/
    #   - JAVIS_SRC_PATH=/home/developer/javis_ws/src/
    #   # Set the hostnames of different systems
    #   - ROS_MASTER_IP=$JAVIS_HOSTNAME
    #   - ROS_HOSTNAME=$JAVIS_HOSTNAME
    #   - JAVIS_USERID=$JAVIS_USERID
    #   - JAVIS_GROUPID=$JAVIS_GROUPID
    #   - JAVIS_SYSTEM_ID=$JAVIS_SYSTEM_ID
    #   - JAVIS_SYSTEM_TYPE=$JAVIS_SYSTEM_TYPE
    #   - JAVIS_SYSTEM_COMPONENT=$JAVIS_SYSTEM_COMPONENT
    #   - JAVIS_SETUP_SUPPRESS_CHECKS=true
    # tty: true
    # # use host network
    # network_mode: "host"